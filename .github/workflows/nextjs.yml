# Sample workflow for building and deploying a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            # ... (rest of detection script)
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
      # - name: Restore cache
      #   uses: actions/cache@v4
      #   with:
      #     path: .next/cache
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # --- START OF THE NEW DEBUGGING STEP ---
      - name: Verify Secrets are Read
        run: |
          echo "Attempting to read secrets..."
          echo "The value of GH_USERNAME is: ${{ secrets.GH_USERNAME }}"
          echo "The status of GH_TOKEN is: ${{ secrets.GH_TOKEN != '' && 'Set and ready' || '*** NOT SET ***' }}"
      # --- END OF THE NEW DEBUGGING STEP ---

      - name: Fetch latest repos
        run: node scripts/fetch-repos.mjs
        env:
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NEXT_PUBLIC_GH_USERNAME: ${{ secrets.NEXT_PUBLIC_GH_USERNAME }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4